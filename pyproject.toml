[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "autogen-voting-extension"
version = "0.1.0"
license = {file = "LICENSE"}
description = "Democratic consensus for AutoGen multi-agent systems through configurable voting mechanisms"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "autogen-agentchat>=0.4.0",
    "autogen-core>=0.4.0",
    "autogen-ext[openai]>=0.4.0",
    "psutil>=6.0.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
openai = ["autogen-ext[openai]>=0.4.0"]
benchmarks = [
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "pandas>=1.5.0",
    "numpy>=1.21.0"
]
dev = [
    "poethepoet>=0.24.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "ruff>=0.3.0",
    "pyright>=1.1.350",
    "mypy>=1.8.0",
    "bandit[toml]>=1.7.0",
    "safety>=3.0.0",
    "pre-commit>=3.0.0",
    "twine>=4.0.0",
    "build>=0.10.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "pandas>=1.5.0",
    "numpy>=1.21.0"
]

[project.urls]
Homepage = "https://github.com/tejas-dharani/autogen-voting-extension"
Repository = "https://github.com/tejas-dharani/autogen-voting-extension.git"
"Bug Tracker" = "https://github.com/tejas-dharani/autogen-voting-extension/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/autogen_voting"]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "B", "C4", "UP"]
ignore = ["E501", "B008", "C901"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["B018", "B011"]

[tool.pyright]
include = ["src"]
typeCheckingMode = "strict"
pythonVersion = "3.10"

[tool.mypy]
python_version = "3.10"
strict = true
exclude = ["^build/", "^dist/"]

[[tool.mypy.overrides]]
module = "tests.*"
strict = false

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.poe]
include = "shared_tasks.toml"

[tool.poe.tasks]
test = "pytest -n auto --cov=src --cov-report=term-missing --cov-report=xml"

[dependency-groups]
benchmarks = [
    "matplotlib>=3.10.3",
    "numpy>=2.2.6",
    "pandas>=2.3.1",
    "seaborn>=0.13.2",
]
